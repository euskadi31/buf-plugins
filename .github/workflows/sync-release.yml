name: Sync Release

on:
  push:
    branches:
      - 'main'
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 3,6 * * *'

jobs:
  nanopb:
    runs-on: ubuntu-latest
    steps:
      - name: Check if a new release
        uses: actions/github-script@v6
        id: nanopb-version
        with:
          script: |
            const tags = await github.rest.repos.listTags({
              owner: 'nanopb',
              repo: 'nanopb'
            });

            const version = tags.data[0].name.replace('nanopb-', '');

            console.log(version);

            return version;
          result-encoding: string

      - name: Check if already released
        uses: actions/github-script@v6
        id: nanopb-check
        with:
          script: |
            const tags = await github.rest.repos.listTags({
              owner: 'euskadi31',
              repo: 'buf-plugins',
              per_page: 100
            });

            const found = tags.data.find(tag => tag.name === 'protoc-gen-nanopb/v${{steps.nanopb-version.outputs.result}}');

            // tags already exists => stop
            if (found !== undefined) {
              return false;
            }

            return true;

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        if: steps.nanopb-check.outputs.result
        with:
          go-version: '1.18.3'
        id: go

      - name: Checkout
        if: steps.nanopb-check.outputs.result
        uses: actions/checkout@v2

      - name: Generate Dockerfile
        if: steps.nanopb-check.outputs.result
        run: go run builder/main.go ${{steps.nanopb-version.outputs.result}} protoc-gen-nanopb/Dockerfile.tpl protoc-gen-nanopb/Dockerfile

      - name: Commit new dockerfile
        if: steps.nanopb-check.outputs.result
        run: |
          cat protoc-gen-nanopb/Dockerfile
          git config --global user.name 'euskadi31'
          git config --global user.email 'euskadi31@users.noreply.github.com'
          git add .
          git commit -am "Bumb nanopb v${{steps.nanopb-version.outputs.result}}"
          git tag -a protoc-gen-nanopb/v${{steps.nanopb-version.outputs.result}} -m "Release protoc-gen-nanopb v${{steps.nanopb-version.outputs.result}}"
          git push
          git push --tags

