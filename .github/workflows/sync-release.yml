name: Sync Release

on:
  workflow_call:
    secrets:
      PAT:
        required: true
    inputs:
      plugin_name:
        required: true
        type: string
      owner_name:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    
defaults:
  run:
    shell: bash

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Check if a new release
        uses: actions/github-script@v6
        id: version
        with:
          script: |
            const tags = await github.rest.repos.listTags({
              owner: '${{ inputs.owner_name }}',
              repo: '${{ inputs.repo_name }}'
            });

            const version = tags.data[0].name.replace('nanopb-', '');

            console.log(version);

            return version;
          result-encoding: string

      - name: Check if already released
        uses: actions/github-script@v6
        id: check
        with:
          script: |
            const tags = await github.rest.repos.listTags({
              owner: 'euskadi31',
              repo: 'buf-plugins',
              per_page: 100
            });

            const found = tags.data.find(tag => tag.name === '${{ inputs.plugin_name }}/v${{ steps.version.outputs.result }}');

            // tags already exists => stop
            if (found) {
              return false;
            }

            return true;

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        if: ${{steps.check.outputs.result == 'true'}}
        with:
          go-version: '1.18.3'
        id: go

      - name: Checkout
        if: ${{steps.check.outputs.result == 'true'}}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}

      - name: Generate Dockerfile
        if: ${{steps.check.outputs.result == 'true'}}
        run: go run builder/main.go ${{steps.version.outputs.result}} ${{ inputs.plugin_name }}/Dockerfile.tpl ${{ inputs.plugin_name }}/Dockerfile

      - name: Commit new Dockerfile
        if: ${{steps.check.outputs.result == 'true'}}
        run: |
          cat ${{ inputs.plugin_name }}/Dockerfile
          git config --global user.name 'euskadi31'
          git config --global user.email 'euskadi31@users.noreply.github.com'
          git add .
          git commit -am "Bumb ${{ inputs.plugin_name }} v${{steps.version.outputs.result}}" || true
          git tag -a ${{ inputs.plugin_name }}/v${{steps.version.outputs.result}} -m "Release ${{ inputs.plugin_name }} v${{steps.version.outputs.result}}"
          git push
          git push --tags

